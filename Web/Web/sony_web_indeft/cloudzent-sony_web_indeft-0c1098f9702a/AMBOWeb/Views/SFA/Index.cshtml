@using AMBOWeb.Classes
@model AMBOModels.UserManagement.UserBasicProperties

@{
    var UserSession = Session["BaseSession"] as AMBOModels.UserValidation.BaseSession;
}

@section PageCSS{
}

@section PageJS{
    <script src="~/Content/plugins/datatables/js/jquery.dataTables.min.js"></script>
    <script src="~/Content/plugins/datatables/js/dataTables.bootstrap.min.js"></script>
    <script src="~/Content/plugins/select2/dist/js/select2.full.min.js"></script>
    <script>
    function getBranchDD() {
        common.ajax_get("@Url.Action("GetBranches", "Common")", null, "#filterBox", function (branches) {
            $(".ddBranch").html("");
            var list = '';
            var options = [];
            for (var i = 0; i < branches.length; i++) {
                list += '<option value="' + branches[i].BranchId + '">' + branches[i].BranchCode + "-" + branches[i].BranchName + '</option>';
            }
            $(".ddBranch").html(list);
            debugger;
            var Branch = @Model.BranchId;
            if(Branch !=null && Branch !=0)
            {
                $('.ddBranch').val(Branch).change();
                $('.ddBranch').attr('readonly', 'readonly');
            }

        }, function (output) {
            if (output.statusCode == 401 || output.status == 401) {
                var response = $.parseJSON(output.responseText);

                if (response.isRedirect) {
                    window.location.href = '../Login/Index';
                    return;
                }
            }
            $(".ddBranch").html("");
        });
    }

    function getStateDD() {
        common.ajax_get("@Url.Action("GetStates", "Common")", null, "#filterBox", function (states) {
            $("#ddState").html("");
            $.each(states, function (i, state) {
                $("#ddState").append($('<option></option>').val(state.ID).html(state.StateName));
            });
            $('#ddState').val(null).change();
        }, function (output) {
            if (output.statusCode == 401 || output.status == 401) {
                var response = $.parseJSON(output.responseText);

                if (response.isRedirect) {
                    window.location.href = '../Login/Index';
                    return;
                }
            }
            $("#ddState").html("");
        });
    }

        function getSFATypeDD() {
            common.ajax_get("@Url.Action("GetSFAType", "Common")", null, "#filterBox", function (types) {
                $("#ddSFAType").html("");
                $.each(types, function (i, sfatype) {
                    $("#ddSFAType").append($('<option></option>').val(sfatype.SFATypeId).html(sfatype.SFATypeName));
                });
                $('#ddSFAType').val(null).change();
            }, function (output) {
                if (output.statusCode == 401 || output.status == 401) {
                    var response = $.parseJSON(output.responseText);

                    if (response.isRedirect) {
                        window.location.href = '../Login/Index';
                        return;
                    }
                }
                $("#ddSFAType").html("");
            });
        }

    function getCityDD() {
        common.ajax_get("@Url.Action("GetAllCities", "Common")", null, "#filterBox", function (cities) {
            $("#ddCity").html("");
            $.each(cities, function (i, city) {
                $("#ddCity").append($('<option></option>').val(city.CityId).html(city.CityName));
            });
            $('#ddCity').val(null).change();
        }, function (output) {
            if (output.statusCode == 401 || output.status == 401) {
                var response = $.parseJSON(output.responseText);

                if (response.isRedirect) {
                    window.location.href = '../Login/Index';
                    return;
                }
            }
            $("#ddCity").html("");
        });
    }

    function getAgencyDD() {
        common.ajax_post("@Url.Action("GetAgency", "Common")", null, "#filterBox", function (agencies) {
            $("#ddAgency").html("");
            $.each(agencies, function (i, agency) {
                $("#ddAgency").append($('<option></option>').val(agency.AgencyId).html(agency.AgencyName));
            });
            $('#ddAgency').val(null).change();
        }, function (output) {
            if (output.statusCode == 401 || output.status == 401) {
                var response = $.parseJSON(output.responseText);

                if (response.isRedirect) {
                    window.location.href = '../Login/Index';
                    return;
                }
            }
            $("#ddAgency").html("");
        });
    }

    //function getStatusDD()
    //{
    //    $("#ddStatus").append($('<option></option>').val(true).html('InActive'));
    //    $("#ddStatus").append($('<option></option>').val(false).html('Active'));
    //    $('#ddStatus').val(null).change();
    //}

    function init() {
        try {
            $('.ddState').select2({
                placeholder: '---All States---'
            });
            $('.ddBranch').select2({
                placeholder: '---All Branches---'
            });
            $('.ddCity').select2({
                placeholder: '---All Cities---'
            });
            $('.ddAgency').select2({
                placeholder: '---All Agencies---'
            });
            $('.ddStatus').select2({
                placeholder: '---Any Status---'
            });
            $('.ddSFAType').select2({
                placeholder: '---All SFA Types---'
            });
        }
        catch (ex) {
            console.log(ex);
        }
    }

    $(document).ready(function () {

        if ('@UserSession.RoleName' == 'RDI')
        {
            @Html.Raw("$('#btnAdd').css('display','none')");
            @Html.Raw("$('#btnOffered').css('display','none')");
            @Html.Raw("$('.text-blue.small').css('display','none')");
        }

        getBranchDD();
        getStateDD();
        getCityDD();
        getAgencyDD();
        getSFATypeDD();
      //  getStatusDD();
        init();
            dtSFAGrid = $('#dtSFA').DataTable({
                serverSide: true,
                processing: true,
                searching: false,
                scrollY:true,
                scrollX:true,
                ajax: {
                    url: "@Url.Action("SFAMasterGrid", "Grid")",
                    type: 'POST',
                    data: function(d){
                        debugger;
                        var Branch = @Model.BranchId;
                        if(Branch !=null && Branch !=0)
                        {
                            d.BranchIds = Branch;
                        }
                        else
                            d.BranchIds = $('#ddBranch').val();
                        d.StateIds = $('#ddState').val();
                        d.CityIds = $('#ddCity').val();
                        d.AgencyIds = $('#ddAgency').val();
                        d.Status = $('#ddStatus').val();
                        d.LoginId = $('#txtLoginId').val();
                        d.EmployeeName = $('#txtEmployeeName').val();
                        d.SFAType = $('#ddSFAType').val();
                    }
                },
                //Bug ID: 0001860
                //Following code added by Nikhil Thakral for adding buttons to grid layout
                initComplete: function(){
                    $("div.dataTables_length").css('width','100% !important');


                } ,
                language: {
                    search: "",
                    searchPlaceholder: "Type here for search...",
                    processing: "Please wait while we fetch data..."
                },
                columns: [
                    { data: "EmployeeId", "visible": false},
                    { data: "FirstName" },
                    { data: "LastName" },
                    { data: "LoginId" },
                    { data: "BranchName" },
                    { data: "StateName" },
                    { data: "CityName" },
                    { data: "Role" },
                    { data: "AgencyName" },
                    { data: "ShiftName" },
                    { data: "StatusName" },
                    {
                        data: function (data, type, row) {
                            return '<a class="btnEdit" ><span data-toggle="tooltip" data-placement="left" title="Edit"><i class="fa fa-lg fa-pencil"></i></span></a>&emsp;' +
                            '<a class="btnDelete text-red" ><span data-toggle="tooltip" data-placement="left" title="Delete"><i class="fa fa-lg fa-trash"></i></span></a>';
                        },
                        orderable: false
                    }
                ],
                createdRow: function (row, data, index) {
                    if (data["StatusName"] == "Active")
                        $('td', row).eq(9).html('<span class="badge bg-green">' + data["StatusName"] + '</span>');
                    else
                        $('td', row).eq(9).html('<span class="badge bg-red">' + data["StatusName"] + '</span>');
                },
                fnDrawCallback: function (oSettings) { $('[data-toggle="tooltip"]').tooltip(); }
            });

        $('body').on('click','#btnOffered',function(){
            debugger;
            var data = new Object();
            data.BranchIds = $('.ddBranch').val();
            data.StateIds = $('#ddState').val();
            data.CityIds = $('#ddCity').val();
            data.LoginId = $('#txtLoginId').val();
            data.EmployeeName = $('#txtEmployeeName').val();
                @*var url = "@Url.Action("GetOfferedEmployeeGrid", "Employee")";*@

                $.ajax({

                    url: '@Url.Action("GetOfferedEmployeeGrid", "Employee")',
                    type: "POST",
                    data: data,
                    success: function (data) {
                        debugger;
                        $('#divEmp').addClass('hidden');
                        $('#divOffered').removeClass('hidden');
                        $('#divOffered').html(data);
                        dtOfferedGrid = $('.dtoffered').DataTable({
                            scrollX: true,
                            scrollY: true,
                            searching:false
                        });
                    },
                    error: function (data) {
                        debugger;
                        if (data.statusCode == 401 || data.status == 401) {
                            var response = $.parseJSON(data.responseText);

                            if (response.isRedirect) {
                                window.location.href = '../Login/Index';
                                return;
                            }
                        }
                        common.notify('error','Content load failed.');
                    }
                });


        });

        $('body').on('click', '.btnBackOffered', function () {
            debugger;
            $('#divOffered').html(null);
            $('#divOffered').addClass('hidden');
            $('#divEmp').removeClass('hidden');

        });

        $('body').on('click', '.btnOfferedEdit', function () {
            debugger;
            var data = dtOfferedGrid.row($(this).parent().parent()).data();
            $(location).attr("href", "@Url.Action("Update", "SFA")" + "?ID=" + data[0]+"&IsOffered="+"Yes");
        });

        $('body').on('click','#btnSearch',function(){
            $('#filterBoxHeader').trigger('click');
            dtSFAGrid.ajax.reload();
        });
            $('body').on('click', '#btnAdd', function () {
                $(location).attr("href", "@Url.Action("Create", "SFA")");
            });

            $('body').on('click', '.btnEdit', function () {
                var data = dtSFAGrid.row($(this).parent().parent()).data();
                $(location).attr("href", "@Url.Action("Update", "SFA")" + "?ID=" + data.EmployeeId+"&IsOffered="+"No");
            });

            $('body').on('click', '.btnDelete', function () {
                var data = dtSFAGrid.row($(this).parent().parent()).data();
                $('#modalDelete').modal('toggle');
                $('#txtSFAID').val(data.EmployeeId);
                $('#displaySFAName').html(data.FirstName + " " + data.LastName);
            });

            $('body').on('click', '#btnDelete', function () {
                var url = "@Url.Action("Delete", "SFA")";
                var data = new Object();
                data.EmployeeId = $("#txtSFAID").val();

                common.ajax_post(url, data, '#DeleteLoad', function (output) {
                    if (output.Data) {
                        $('#modalDelete').modal('toggle');
                        common.notify('success',output.Message);
                        dtSFAGrid.ajax.reload();
                    }
                    else {
                        common.notify('error', output.Message);
                    }
                },
                function (output) {
                    var response = $.parseJSON(output.responseText);

                    if (response.isRedirect) {
                        window.location.href = '../Login/Index';
                        return;
                    }
                    common.notify('error', output.Message);
                });
            });

        $("#btnDownload").click(function () {

            var modeldata =new Object();
            modeldata.BranchIds = $('#ddBranch').val();
            modeldata.StateIds = $('#ddState').val();
            modeldata.CityIds = $('#ddCity').val();
            modeldata.AgencyIds = $('#ddAgency').val();
            modeldata.Status = $('#ddStatus').val();
            modeldata.LoginId = $('#txtLoginId').val();
            modeldata.EmployeeName = $('#txtEmployeeName').val();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("ExportExcelSFA", "Grid")',
                data: { ModuleId: @((int)Common.Module.SFA), InputParam : modeldata },

                    success: function (returnValue) {
                        if(returnValue)
                        {
                            window.location.href = "@Url.RouteUrl(new { Controller = "Grid", Action = "Download" })/?file=" + returnValue.fileName;
                            common.notify('success', "File downloaded successfully");
                        }
                        else
                        {
                            common.notify('error',"Empty file returned");
                        }
                    },
                error: function (output) {
                    var response = $.parseJSON(output.responseText);

                    if (response.isRedirect) {
                        window.location.href = '../Login/Index';
                        return;
                    }
                        common.notify('error', "Error while downloading file.")
                    }
                });

            });
        });
</script>
}

@section PageModals
{
    <div class="modal fade" id="modalDelete">
        <div class="modal-dialog">
            <div class="modal-content" id="DeleteLoad">
                <div class="modal-header custom-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title" id="modalDeleteTitle"><i class="fa fa-trash"></i> Delete an existing SFA account</h4>
                </div>
                <div class="modal-body">
                    @Html.HiddenFor(m => m.EmployeeId, new { @id = "txtSFAID" })
                    <strong><span id="displaySFAName"></span></strong> will be deleted from the system. Are you sure to proceed?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default pull-left" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                    <button id="btnDelete" type="button" class="btn btn-primary"><i class="fa fa-check"></i> Yes</button>
                </div>
            </div>
        </div>
    </div>
}


@{Html.RenderAction("GetSFAMasterGridFilters", "SFA");}


<div class="row"id="divEmp">
    <div class="col-lg-12">
        <div class="box box-solid box-primary">
            <div class="box-body">
                <div class="pull-right" style="display: inline-flex">
                    <button style="display: inline-block; float:right" id="btnDownload" type="button" class="btn btn-success btn-flat"><i class="fa fa-download"></i> Download to Excel</button>
                    &nbsp;
                    <button style="display: inline-block; float:right" id="btnAdd" type="button" class="btn btn-primary btn-flat"><i class="fa fa-plus"></i> Add New</button>
                    &nbsp;<button id="btnOffered" type="button" class="btn btn-primary btn-flat"><i class="fa fa-plus"></i> Manage Offered</button>
                </div>
                <table id="dtSFA" class="table table-bordered table-striped table-hover text-nowrap datatable" style="width:100%">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>First Name</th>
                            <th>Last Name</th>
                            <th>Login ID</th>
                            <th>Branch</th>
                            <th>State</th>
                            <th>City</th>
                            <th>Role</th>
                            <th>Agency Name</th>
                            <th>Shift Name</th>
                            <th>Status</th>
                            <th>Quick Actions</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div id="divOffered" class="row hidden">
</div>