@model AMBOModels.IncentiveManagement.CreateFestivalIncentive
@using AMBOWeb.Classes
@section PageCSS{
}

@section PageJS{
    <script src="~/Content/plugins/datatables/js/jquery.dataTables.min.js"></script>
    <script src="~/Content/plugins/datatables/js/dataTables.bootstrap.min.js"></script>
    <script src="~/Content/plugins/select2/dist/js/select2.full.min.js"></script>
    <script src="~/Content/plugins/input-mask/jquery.inputmask.js"></script>
    <script src="~/Content/plugins/input-mask/jquery.inputmask.date.extensions.js"></script>
    <script src="~/Content/plugins/input-mask/jquery.inputmask.extensions.js"></script>
    <script src="~/Content/plugins/BootStrapDatePicker/js/bootstrap-datepicker.min.js"></script>
    <script>


        function getDivisionsDD() {
            common.ajax_get("@Url.Action("GetDivisions", "Common")", null, "#tabData", function (divisions) {
                $(".ddSFADivision").html("");
                var list = '';
                var options = [];
                for (var i = 0; i < divisions.length; i++) {
                    list += '<option selected value="' + divisions[i].Id + '">' + divisions[i].DivisionName + '</option>';
                }
                $(".ddSFADivision").html(list);
                @if (IsPost)
                {
                    if (Model.DivisionIds != null)
                    {
                        @Html.Raw("$('.ddSFADivision').val(['" + String.Join("','", Model.DivisionIds) + "']).change();")
                    }
                }
            }, function (output) {
                if (output.statusCode == 401 || output.status == 401) {
                    var response = $.parseJSON(output.responseText);

                    if (response.isRedirect) {
                        window.location.href = '../Login/Index';
                        return;
                    }
                }
                $(".ddSFADivision").html("");
            });
        }

        function getBranchDD() {
            common.ajax_get("@Url.Action("GetBranches", "Common")", null, "#tabData", function (branches) {
                $(".ddBranch").html("");
                var list = '';
                var options = [];
                for (var i = 0; i < branches.length; i++) {
                    list += '<option selected value="' + branches[i].BranchId + '">' + branches[i].BranchCode + "-" + branches[i].BranchName + '</option>';
                }
                $(".ddBranch").html(list);
                @if (IsPost)
                {
                    if (Model.BranchIds != null)
                    {
                        @Html.Raw("$('.ddBranch').val(['" + String.Join("','", Model.BranchIds) + "']).change();")
                    }
                }
            }, function (output) {
                if (output.statusCode == 401 || output.status == 401) {
                    var response = $.parseJSON(output.responseText);

                    if (response.isRedirect) {
                        window.location.href = '../Login/Index';
                        return;
                    }
                }
                $(".ddBranch").html("");
            });
        }

        function getChannelsDD() {
            common.ajax_get("@Url.Action("GetChannels", "Common")", null, "#tabData", function (channels) {
                $(".ddChannel").html("");
                var list = '';
                var options = [];
                for (var i = 0; i < channels.length; i++) {
                    list += '<option selected value="' + channels[i].Id + '">' + channels[i].ChannelName + '</option>';
                }
                $(".ddChannel").html(list);

                @if (IsPost)
                {
                    if (Model.ChannelIds != null)
                    {
                        @Html.Raw("$('.ddChannel').val(['" + String.Join("','", Model.ChannelIds) + "']).change();")
                    }
                }

            }, function (channels) {
                if (channels.statusCode == 401 || channels.status == 401) {
                    var response = $.parseJSON(channels.responseText);

                    if (response.isRedirect) {
                        window.location.href = '../Login/Index';
                        return;
                    }
                }
                $(".ddChannel").html("");
            });
        }


        @*function getProdCatDD() {
            common.ajax_get("@Url.Action("GetProductCategories", "Common")", null, "#tabData", function (prodcats) {
                $(".ddAddProCat").html("");
                $.each(prodcats, function (i, prodcat) {
                    $(".ddAddProCat").append($('<option></option>').val(prodcat.ID).html(prodcat.CategoryName));
                });
                @if(IsPost)
                {
                    if(Model.ProCatIds != null)
                    {
                        if(Model.TargetCatIds != null)
                        {
                            @Html.Raw("$('.ddAddProCat').val(['" + String.Join("','", Model.ProCatIds) + "']).trigger('change', [{ value: ['" + String.Join("','", Model.TargetCatIds) + "']}]);")
                        }
                        else
                        {
                            @Html.Raw("$('.ddAddProCat').val(['" + String.Join("','", Model.ProCatIds) + "']).change();")
                        }
                    }
                }
                else
                {
                    @Html.Raw("$('.ddAddProCat').val(null).change();")
                }
            }, function (output) {
                if (output.statusCode == 401 || output.status == 401) {
                    var response = $.parseJSON(output.responseText);

                    if (response.isRedirect) {
                        window.location.href = '../Login/Index';
                        return;
                    }
                }
                $(".ddAddProCat").html("");
            });
        }

        function linkProdCatTargetCatCatDD() {
            debugger;
            $('.ddAddProCat').on('change', function (e, targetcat) {
                if (!($(this).val() == null || $(this).val() == undefined || $(this).val() == '0' || $(this).val() == '')) {
                    var data = new Object();
                    data.ProductCategoryIds = $(this).val();
                    common.ajax_post("@Url.Action("GetTargetCategoriesByProductCategories", "Common")", data, '#tabForm',
                    function (output) {
                        debugger;
                        if (output.MessageCode == MessageCodes.Acceptable.Found) {
                            $('.ddAddTargetCat').html('');
                            $.each(output.Data, function (i) {
                                $('.ddAddTargetCat').append($('<option>', { value: output.Data[i].TargetCategoryId }).text(output.Data[i].TargetCategoryName));
                            });
                            if (!(targetcat == null || targetcat == undefined || targetcat.value == null || targetcat.value == undefined ||
                                targetcat.value == '0' && targetcat.value == ''))
                                $('.ddAddTargetCat').val(targetcat.value).change();
                            else
                                $('.ddAddTargetCat').val(null).change();

                        }
                        else
                            common.notify('error', output.Message);
                    },
                function (output) {
                    if (output.statusCode == 401 || output.status == 401) {
                        var response = $.parseJSON(output.responseText);

                        if (response.isRedirect) {
                            window.location.href = '../Login/Index';
                            return;
                        }
                    }
                    $('.ddAddTargetCat').html('');
                    $('.ddAddTargetCat').val(null).change();

                    common.notify('error', 'No target categories found for selected product categories.');
                });


                }
            });
        }*@

        function init() {
            try {
                $('#txtDateFrom').prop('data-inputmask', "'alias': 'dd/mm/yyyy'");
                $('#txtDateFrom').prop('data-mask', '');
                $('#txtDateFrom').inputmask('dd/mm/yyyy', { 'placeholder': 'dd/mm/yyyy' })
                $('#txtDateFrom').datepicker({
                    autoclose: true,
                    format: "dd/mm/yyyy"
                });
                $('#txtDateTo').prop('data-inputmask', "'alias': 'dd/mm/yyyy'");
                $('#txtDateTo').prop('data-mask', '');
                $('#txtDateTo').inputmask('dd/mm/yyyy', { 'placeholder': 'dd/mm/yyyy' })
                $('#txtDateTo').datepicker({
                    autoclose: true,
                    format: "dd/mm/yyyy"
                });
                //$('.ddAddTargetCat').select2({
                //    placeholder: 'Select Target Categories'
                //});
                //$('.ddAddProCat').select2({
                //    placeholder: 'Select Product Categories'
                //});
                $('.ddSFADivision').select2({
                    placeholder: 'Select SFA Divisions'
                });
                $('.ddBranch').select2({
                    placeholder: 'Select Branches'
                });
                $('.ddChannel').select2({
                    placeholder: 'Select Channels'
                });
                $('#txtSchemeName').focus();
                @if(Model == null)
                {
                    @Html.Raw("$('#AddradioCBIN').iCheck('check');")
                }
                else if(Model.IsCalculateBase)
                {
                    @Html.Raw("$('#AddradioCBIY').iCheck('check');")
                }
                else
                {
                    @Html.Raw("$('#AddradioCBIN').iCheck('check');")
                }
                @if(Model == null)
                {
                    @Html.Raw("$('#AddradioPBIN').iCheck('check');")
                }
                else if(Model.IsPayBase)
                {
                    @Html.Raw("$('#AddradioPBIY').iCheck('check');")
                }
                else
                {
                    @Html.Raw("$('#AddradioPBIN').iCheck('check');")
                }
            }
            catch (ex) {
                console.log(ex);
            }
        }

        function ValidateForm() {
            if ($('#txtSchemeName').val() == null || $('#txtSchemeName').val() == undefined || $('#txtSchemeName').val() == "") {
                common.notify('error', 'Please enter Scheme Name.');
                return false;
            }

            if ($('#txtDateFrom').val() == null || $('#txtDateFrom').val() == undefined || $('#txtDateFrom').val() == "") {
                common.notify('error', 'Please enter From Date.');
                return false;
            }

            if ($('#txtDateTo').val() == null || $('#txtDateTo').val() == undefined || $('#txtDateTo').val() == "") {
                common.notify('error', 'Please enter To Date.');
                return false;
            }

            if ($('#ddAddBranch').val() == null || $('#ddAddBranch').val() == undefined || $('#ddAddBranch').val() == "") {
                common.notify('error', 'Please select at least one branch.');
                return false;
            }
            return true;
        }

        function DownloadExcel() {

            if (ValidateForm()) {
                var data = new Object();
                data.SchemeId = $('#txtSchemeId').val();

                common.ajax_post('@Url.Action("Download", "FestivalIncentive")', data, '#tabForm', function (output) {
                    if (output.status)
                        window.location = '@Url.Action("Download", "FestivalIncentive")' + '?fileGuid=' + output.FileGuid
                                      + '&filename=' + output.FileName;
                    else
                        common.notify('error', output.message);
                }, function (output) {
                    if (output.statusCode == 401 || output.status == 401) {
                        var response = $.parseJSON(output.responseText);

                        if (response.isRedirect) {
                            window.location.href = '../Login/Index';
                            return;
                        }
                    }
                    common.notify('error', 'Unable to download festival incentive definition excel file. Please contact your administrator.');
                });
            }
        }

        $(document).ready(function () {
            //getProdCatDD();
            getDivisionsDD();
            getBranchDD();
            getChannelsDD();
            //linkProdCatTargetCatCatDD();
            init();
            $('#btnDownload').click(function () { DownloadExcel(); });
            $('body').on('click', '#btnBack', function () {
                $(location).attr('href', '@Url.Action("Index", "FestivalIncentive")');
            });

        });
    </script>
}


@section PageModals
{

}

<div class="row">
    <div class="col-lg-12">
        <div class="nav-tabs-custom">
            <ul class="nav nav-tabs">
                <li class="active">
                    <a href="#tabForm" data-toggle="tab">
                        <i class="fa fa-plus"></i> Add a new Festival Incentive Definition
                    </a>
                </li>
            </ul>
            <div class="tab-content">
                <div class="tab-pane active" id="tabForm">
                    @using (Html.BeginForm("Upload", "FestivalIncentive", FormMethod.Post, new { @id = "AddFestivalIncentiveForm", enctype = "multipart/form-data" }))
                    {
                        @Html.HiddenFor(m => m.SchemeId, new { @id = "txtSchemeId" })
                        <div class="row">
                            <div class="col-lg-3">
                                @Html.AmboTextboxFor(m=>m.SchemeName, "txtSchemeName", "Scheme Name", "Enter Scheme Name Here...", "", InputTypes.AlphaNumericSymbol1WithSpace)
                            </div>
                            <div class="col-lg-2">
                                @Html.AmboTextboxFor(m => m.DateFrom, "txtDateFrom", "Date From", "Enter Start Date Here...", "", "")
                            </div>
                            <div class="col-lg-2">
                                @Html.AmboTextboxFor(m => m.DateTo, "txtDateTo", "Date To", "Enter End Date Here...", "", "")
                            </div>
                            <div class="col-lg-2">
                                @Html.Ambo2RadioButtonGroupFor(m => m.IsCalculateBase, "Calculate Base Incentive", "AddradioCBIY", "true", "Yes", "AddradioCBIN", "false", "No")
                            </div>
                            <div class="col-lg-3">
                                @Html.Ambo2RadioButtonGroupFor(m => m.IsPayBase, "Pay Base Incentive", "AddradioPBIY", "true", "Yes", "AddradioPBIN", "false", "No")
                            </div>
                        </div>
                        <div class="row">
                            @*<div class="col-lg-12">
                                @Html.AmboDropdownMultipleFor(m => m.ProCatIds, "ddAddProCat", "Applicable Product Categories", "ddAddProCat")
                            </div>
                            <div class="col-lg-12">
                                @Html.AmboDropdownMultipleFor(m => m.TargetCatIds, "ddAddTargetCat", "Applicable Target Categories", "ddAddTargetCat")
                            </div>*@                            
                            <div class="col-lg-12">
                                @Html.AmboDropdownMultipleFor(m => m.DivisionIds, "ddAddSFADivision", "Applicable SFA Divisions", "ddSFADivision")
                            </div>
                            <div class="col-lg-12">
                                @Html.AmboDropdownMultipleFor(m => m.BranchIds, "ddAddBranch", "Applicable Branches", "ddBranch")
                            </div>
                            <div class="col-lg-12">
                                @Html.AmboDropdownMultipleFor(m => m.ChannelIds, "ddAddChannel", "Applicable Channels", "ddChannel")
                            </div>
                        </div>
                        <div class="row text-center">
                            <div class="col-lg-2">
                                <div class="form-group">
                                    <label></label>
                                    <div class="input-group">
                                        <div class="input-group-btn">
                                            <button id="btnDownload" type="button" class="btn btn-success btn-flat"><i class="fa fa-download"></i> Download</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4 col-lg-offset-1">
                                <div class="form-group">
                                    <label>@*Choose file for upload*@</label>
                                    <div class="input-group">
                                        <div class="input-group-btn">
                                            <button onclick="$('#fileChooser').click();" type="button" class="btn btn-primary">Browse...</button>
                                        </div>
                                        <input id="fileChooserValue" type="text" class="form-control" disabled>
                                        <input name="ExcelUploadFile" type="file" class="hidden" id="fileChooser" onchange="$('#fileChooserValue').val(document.getElementById('fileChooser').files[0].name);" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label></label>
                                    <div class="input-group">
                                        <div class="input-group-btn">
                                            <button id="btnSubmit" type="submit" class="btn btn-primary btn-flat"><i class="fa fa-upload"></i> Upload</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-2">
                                <div class="form-group">
                                    <label></label>
                                    <div class="input-group">
                                        <div class="input-group-btn">
                                            <button id="btnBack" type="button" class="btn btn-default btn-flat"><i class="fa fa-close"></i> Cancel</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
