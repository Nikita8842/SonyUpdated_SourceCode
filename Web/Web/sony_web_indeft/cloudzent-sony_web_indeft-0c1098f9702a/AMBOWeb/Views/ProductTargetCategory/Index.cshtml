@using AMBOWeb.Classes
@model AMBOModels.MasterMaintenance.ProductTargetCategoryMaster

@section PageCSS{
    <style>
        .modal-body {
        word-break: break-word;
        }
    </style>
}

@section PageJS{
    <script src="~/Content/plugins/datatables/js/jquery.dataTables.min.js"></script>
    <script src="~/Content/plugins/datatables/js/dataTables.bootstrap.min.js"></script>
    <script src="~/Content/plugins/select2/dist/js/select2.full.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#txtTargetCategory').on('keypress', function (event) {
                var  Length= $('#txtTargetCategory').val().length;
                if (Length>100) {
                    event.preventDefault();
                    return false;
                }
            });
            dtProdTargetCategory = $('#dtProdTargetCategory').DataTable({
                searching: false,
                serverSide: true,
                processing: true,
                scrollY: true,
                ajax: {
                    url: "@Url.Action("ProductTargetCategoryMasterGrid", "Grid")",
                    type: 'POST',
                    data: function (d) {
                        d.ProductCategoryIds = $('#ddFilterProdCat').val();
                        d.TargetCategory = $('#txtFilterTargetCat').val();
                    }
                },
                language: {
                    search: "",
                    searchPlaceholder: "Type here for search...",
                    processing: "Please wait while we fetch data..."
                },
                columns: [
                    { data: "ProductCategory" },
                    { data: "TargetCategory" },
                    { data: "ActiveStatus" },
                    {
                        data: function (data, type, row) {
                            return '<a class="btnEdit" ><span data-toggle="tooltip" data-placement="left" title="Edit"><i class="fa fa-lg fa-pencil"></i></span></a>&emsp;' +
                            '<a class="btnDelete" ><span data-toggle="tooltip" data-placement="left" title="Delete"><i class="fa fa-lg fa-trash"></i></span></a>';
                        },
                        orderable: false
                    }
                ],
                createdRow: function (row, data, index) {
                    if (data["ActiveStatus"] == "Active")
                        $('td', row).eq(2).html('<span class="badge bg-green">' + data["ActiveStatus"] + '</span>');
                    else
                        $('td', row).eq(2).html('<span class="badge bg-red">' + data["ActiveStatus"] + '</span>');
                },
                fnDrawCallback: function (oSettings) { $('[data-toggle="tooltip"]').tooltip(); }
            });

            $('#ddProdCat').select2({ placeholder: 'Select Product Category'});
            $('#ddFilterProdCat').select2({ placeholder: 'Select Product Category'});

            $('body').on('click', '#btnSearch', function () {
                $('#filterBoxHeader').trigger('click');
                dtProdTargetCategory.ajax.reload();
            });

            common.ajax_get('@Url.Action("GetProductCategories", "Common")', null, '#AddEditLoad', function (categories) {
                $("#ddProdCat").html("");
                $("#ddFilterProdCat").html("");
                $.each(categories, function (i, category) {
                    $("#ddProdCat").append($('<option></option>').val(category.ID).html(category.CategoryName));
                    $("#ddFilterProdCat").append($('<option></option>').val(category.ID).html(category.CategoryName));
                });
                $("#ddProdCat").val(null).change();
                $("#ddFilterProdCat").val(null).change();
            }, function (output) {
                if (output.statusCode == 401 || output.status == 401) {
                    var response = $.parseJSON(output.responseText);

                    if (response.isRedirect) {
                        window.location.href = '../Login/Index';
                        return;
                    }
                }
                $("#ddProdCat").html("");
                $("#ddFilterProdCat").html("");
            });

            $('#modalAddEdit').on('shown.bs.modal', function () {
                $('#txtTargetCategory').focus();
            });
            $('#modalAddEdit').on('hidden.bs.modal', function () {
                debugger;
                $('#txtProdTargetCatID').val('');
                $('#txtTargetCategory').val('');
                $('#ddProdCat').val(null).trigger('change');
                $('#radioStatusA, #radioStatusI').iCheck('uncheck');
            });

            $('#modalDelete').on('hidden.bs.modal', function () {
                debugger;
                $('#txtProdTargetCatID').val('');
            });

            $('body').on('click', '#btnAdd', function () {
                $('#modalAddEditTitle').html('<i class="fa fa-plus"></i> Add a new product target category mapping');
                $('#modalAddEdit').modal('toggle');
                $("#radioStatusA").iCheck("check");
            });

            $('body').on('click', '.btnEdit', function () {
                var data = dtProdTargetCategory.row($(this).parent().parent()).data();
                $('#modalAddEditTitle').html('<i class="fa fa-pencil"></i> Update an existing product target category mapping');
                $('#modalAddEdit').modal('toggle');
                $('#txtProdTargetCatID').val(data.Id);
                $('#txtTargetCategory').val(data.TargetCategory);
                $('#ddProdCat').val(data.ProductCategoryId).trigger('change');
                if (data.ActiveStatus == "Active")
                    $("#radioStatusA").iCheck("check");
                else
                    $("#radioStatusI").iCheck("check");
            });

            $('body').on('click', '.btnDelete', function () {
                var data = dtProdTargetCategory.row($(this).parent().parent()).data();
                $('#modalDelete').modal('toggle');
                $('#txtProdTargetCatID').val(data.Id);
                $('#displayProdTargetCatName').html(data.ProductCategory + "-" + data.TargetCategory);
            });

            function ValidateFilters()
            {
                if($('#txtTargetCategory').val() == null || $('#txtTargetCategory').val() == undefined || $('#txtTargetCategory').val() == '') {
                    common.notify('error','Target category is required')
                    return false;
                }

                if($('#txtTargetCategory').val().length >= 50) {
                    common.notify('error','Target category name length cannot be more than 50 characters.')
                    return false;
                }

                if ($('#ddProdCat').val() == null || $('#ddProdCat').val() == undefined || $('#ddProdCat').val() == '') {
                    common.notify('error','Product category is required')
                    return false;
                }
                
                return true;
            }

            $('body').on('click', '#btnSubmit', function () {
                var data = new Object();
                var url = '';
                if(ValidateFilters())
                {
                    debugger;
                    
                    if ($("#txtProdTargetCatID").val() == '' || $("#txtProdTargetCatID").val() == 0 || $("#txtProdTargetCatID").val() == null)//add
                    {
                        url = '@Url.Action("Create","ProductTargetCategory")';
                    }
                    else//update
                    {
                        url = '@Url.Action("Update", "ProductTargetCategory")';
                        data.Id = $("#txtProdTargetCatID").val();
                    }
                    data.ProductCategoryId = $("#ddProdCat").val();
                    data.TargetCategory = $("#txtTargetCategory").val();
                    data.TargetCategory = data.TargetCategory.trim();
                    data.Status = $('#radioStatusA').is(':checked') ? true : false;

                    common.ajax_post(url, data, '#AddEditLoad', function (output) {
                        if (output.Data) {
                            debugger;
                            $('#modalAddEdit').modal('toggle');
                            common.notify('success', output.Message);
                            dtProdTargetCategory.ajax.reload();
                        }
                        else {
                            common.notify('error', output.Message);
                        }
                    },
                    function (output) {
                        if (output.statusCode == 401 || output.status == 401) {
                            var response = $.parseJSON(output.responseText);

                            if (response.isRedirect) {
                                window.location.href = '../Login/Index';
                                return;
                            }
                        }
                        common.notify('error', output.Message);
                    });
                }

            });

            $('body').on('click', '#btnDelete', function () {
                var url = "@Url.Action("Delete", "ProductTargetCategory")";
                var data = new Object();
                data.Id = $("#txtProdTargetCatID").val();

                common.ajax_post(url, data, '#DeleteLoad', function (output) {
                    if (output.Data) {
                        $('#modalDelete').modal('toggle');
                        common.notify('success', output.Message);
                        dtProdTargetCategory.ajax.reload();
                    }
                    else {
                        common.notify('error', output.Message);
                    }
                },
                function (output) {
                    if (output.statusCode == 401 || output.status == 401) {
                        var response = $.parseJSON(output.responseText);

                        if (response.isRedirect) {
                            window.location.href = '../Login/Index';
                            return;
                        }
                    }
                    common.notify('error', output.Message);
                });
            });


            $("#btnDownload").click(function () {

                var modeldata =new Object();
                modeldata.ProductCategoryIds = $('#ddFilterProdCat').val();
                modeldata.TargetCategory = $('#txtFilterTargetCat').val();

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("ExportExcelProductTargetCategory", "Grid")',
                    data: { ModuleId: @((int)Common.Module.ProductTargetCategory), InputParam : modeldata },

                    success: function (returnValue) {
                        if(returnValue)
                        {
                            window.location.href = "@Url.RouteUrl(new { Controller = "Grid", Action = "Download"})/?file=" + returnValue.fileName;
                            common.notify('success', "File downloaded successfully");
                        }
                        else
                        {
                            common.notify('error',"Empty file returned");
                        }
                    },
                    error: function (output) {
                        if (output.statusCode == 401 || output.status == 401) {
                            var response = $.parseJSON(output.responseText);

                            if (response.isRedirect) {
                                window.location.href = '../Login/Index';
                                return;
                            }
                        }
                        common.notify('error', "Error while downloading file.")
                    }
                });
                
            });
        });
    </script>
}

@section PageModals
{
<div class="modal fade" id="modalAddEdit">
    <div class="modal-dialog">
        <div class="modal-content" id="AddEditLoad">
            <div class="modal-header custom-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="modalAddEditTitle"></h4>
            </div>
            <div class="modal-body">
                @Html.HiddenFor(m => m.Id, new { @id = "txtProdTargetCatID" })
                <div class="form-group">
                    <label for="txtTargetCategory">Target Category <span class="text-danger">*</span></label><span class="text-danger">@Html.ValidationMessageFor(m => m.TargetCategory)</span>
                    @Html.TextBoxFor(m => m.TargetCategory, new { @class = "form-control", @id = "txtTargetCategory", @placeholder = "Enter Target Category Name here..." })
                </div>
                <div class="form-group">
                    <label for="ddProdCat">Product Category <span class="text-danger">*</span></label><span class="text-danger">@Html.ValidationMessageFor(m => m.ProductCategoryId)</span>
                    @Html.DropDownListFor(m => m.ProductCategoryId, new List<SelectListItem>(), new { @class = "form-control", @id = "ddProdCat", @style = "width:100%" })
                </div>
                <div class="form-group">
                    <label for="radioStatus">Status<span class="text-danger">*</span></label><br />
                    @Html.RadioButtonFor(m => m.Status, true, new { @id = "radioStatusA" }) Active
                    &nbsp;&nbsp;&nbsp;&nbsp;
                    @Html.RadioButtonFor(m => m.Status, false, new { @id = "radioStatusI" }) InActive
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default pull-left" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                <button id="btnSubmit" type="button" class="btn btn-primary"><i class="fa fa-check"></i> Save changes</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalDelete">
    <div class="modal-dialog">
        <div class="modal-content" id="DeleteLoad">
            <div class="modal-header custom-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="modalDeleteTitle"><i class="fa fa-trash"></i> Delete an existing Product Target Category mapping</h4>
            </div>
            <div class="modal-body">
                @Html.HiddenFor(m => m.Id, new { @id = "txtProdTargetCatID" })
                <strong><span id="displayProdTargetCatName"></span></strong> mapping will be deleted from the system. Are you sure to proceed?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default pull-left" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                <button id="btnDelete" type="button" class="btn btn-primary"><i class="fa fa-check"></i> Yes</button>
            </div>
        </div>
    </div>
</div>
}


@{ Html.RenderAction("GetProductTargetCategoryGridFilters", "ProductTargetCategory"); }

<div class="row" id="rowtable">
    <div class="col-lg-12">
        <div class="nav-tabs-custom">
            <ul class="nav nav-tabs">
                <li class="active"><a href="#tabData" data-toggle="tab"><i class="fa fa-th"></i> Product Target Category Mapping</a></li>                
            </ul>
            <div class="tab-content">
                <div class="tab-pane active" id="#tabData">
                    <table id="dtProdTargetCategory" class="table table-bordered table-striped table-hover datatable" style="width:100%">
                        <thead>
                            <tr>
                                <th>Product Category</th>
                                <th>Target Category</th>
                                <th>Status</th>
                                <th>Quick Actions</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
                <!-- /.tab-pane -->
            </div>
            <!-- /.tab-content -->
        </div>
    </div>
</div>
