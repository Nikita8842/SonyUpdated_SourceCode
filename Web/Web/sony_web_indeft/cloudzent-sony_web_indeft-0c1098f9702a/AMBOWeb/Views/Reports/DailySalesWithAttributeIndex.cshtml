@model AMBOModels.Reports.DailySalesWithAttributesReport
@using AMBOWeb.Classes

@section PageCSS{
    <style>
        #filterBoxHeader:hover {
            cursor: pointer;
        }

        .select2-selection--multiple {
            height: 100px;
            overflow-y: auto;
        }
    </style>
    <link href="~/Content/plugins/datatables/css/responsive.dataTables.min.css" rel="stylesheet" />
}

@section PageJS{
    <script src="~/Content/plugins/select2/dist/js/select2.full.min.js"></script>
    <script src="~/Content/plugins/input-mask/jquery.inputmask.js"></script>
    <script src="~/Content/plugins/input-mask/jquery.inputmask.date.extensions.js"></script>
    <script src="~/Content/plugins/input-mask/jquery.inputmask.extensions.js"></script>
    <script src="~/Content/plugins/BootStrapDatePicker/js/bootstrap-datepicker.min.js"></script>
    <script src="~/Content/plugins/datatables/js/jquery.dataTables.min.js"></script>
    <script src="~/Content/plugins/datatables/js/dataTables.bootstrap.min.js"></script>
    <script src="~/Content/plugins/datatables/js/dataTables.responsive.min.js"></script>
    <script type="text/javascript">

        function getBranchDD()
        {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetBranches", "Common")',
                success: function (branches) {

                    $("#ddBranch").html(""); // clear before appending new list
                    //$("#ddBranch").append($('<option></option>').val(0).html("----All Branches------"));
                    $.each(branches, function (i, branch) {
                        $("#ddBranch").append($('<option></option>').val(branch.BranchId).html(branch.BranchCode + "-" + branch.BranchName));
                    });
                    $('#ddBranch').val(null).change();
                    var Branch = @Model.BranchId;
                    if(Branch !=null && Branch !=0)
                    {
                        $('#ddBranch').val(Branch).change();
                        $('#ddBranch').attr('readonly', 'readonly');
                    }
                },
                error: function (output) {
                    if (output.statusCode == 401 || output.status == 401) {
                        var response = $.parseJSON(output.responseText);

                        if (response.isRedirect) {
                            window.location.href = '../Login/Index';
                            return;
                        }
                    }
                    $("#ddBranch").html("");
                }
            });

        }

        function getStateDD() {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetStates", "Common")',
                success: function (states) {

                    $("#ddState").html(""); // clear before appending new list
                    //$("#ddState").append($('<option></option>').val(0).html("----All States------"));
                    $.each(states, function (i, state) {
                        $("#ddState").append($('<option></option>').val(state.ID).html(state.StateName));
                    });
                    $('#ddState').val(null).change();
                },
                error: function (output) {
                    if (output.statusCode == 401 || output.status == 401) {
                        var response = $.parseJSON(output.responseText);

                        if (response.isRedirect) {
                            window.location.href = '../Login/Index';
                            return;
                        }
                    }
                    $("#ddState").html("");
                }
            });


        }

        function getSFATypeDD() {
            common.ajax_get("@Url.Action("GetSFAType", "Common")", null, "#filterBox", function (types) {
                $("#ddSFAType").html("");
                $.each(types, function (i, sfatype) {
                    $("#ddSFAType").append($('<option></option>').val(sfatype.SFATypeId).html(sfatype.SFATypeName));
                });
                $('#ddSFAType').val(null).change();
            }, function (output) {
                if (output.statusCode == 401 || output.status == 401) {
                    var response = $.parseJSON(output.responseText);

                    if (response.isRedirect) {
                        window.location.href = '../Login/Index';
                        return;
                    }
                }
                $("#ddSFAType").html("");
            });
        }

        function getProdCatDD() {

            $.ajax({
                type: "GET",
                url: '@Url.Action("GetProductCategories", "Common")',
                success: function (prodcats) {
                    $("#ddProdCat").html(""); // clear before appending new list
                    //$("#ddProdCat").append($('<option></option>').val(0).html("----All Product Categories------"));
                    $.each(prodcats, function (i, prodcat) {
                        $("#ddProdCat").append($('<option></option>').val(prodcat.ID).html(prodcat.CategoryName));
                    });
                    $('#ddProdCat').val(null).change();
                },
                error: function (output) {
                    if (output.statusCode == 401 || output.status == 401) {
                        var response = $.parseJSON(output.responseText);

                        if (response.isRedirect) {
                            window.location.href = '../Login/Index';
                            return;
                        }
                    }
                    $("#ddProdCat").html("");
                }
            });
        }

        function getDivisionsDD() {

            $.ajax({
                type: "GET",
                url: '@Url.Action("GetDivisions", "Common")',
                success: function (divisions) {
                    $("#ddSFADivision").html(""); // clear before appending new list
                    //$("#ddSFADivision").append($('<option></option>').val(0).html("----All Divisions------"));
                    $.each(divisions, function (i, division) {
                        $("#ddSFADivision").append($('<option></option>').val(division.Id).html(division.DivisionName));
                    });
                    $('#ddSFADivision').val(null).change();
                },
                error: function (output) {
                    if (output.statusCode == 401 || output.status == 401) {
                        var response = $.parseJSON(output.responseText);

                        if (response.isRedirect) {
                            window.location.href = '../Login/Index';
                            return;
                        }
                    }
                    $("#ddSFADivision").html("");
                }
            });
        }

        function getClassDD() {

            $.ajax({
                type: "GET",
                url: '@Url.Action("GetDealerClassificationTypes", "Common")',
                success: function (classes) {
                    $("#ddDealerClass").html(""); // clear before appending new list
                    //$("#ddDealerClass").append($('<option></option>').val(0).html("----All Classifications------"));
                    $.each(classes, function (i, dealerclass) {
                        $("#ddDealerClass").append($('<option></option>').val(dealerclass.ID).html(dealerclass.ClassificationName));
                    });
                    $('#ddDealerClass').val(null).change();
                },
                error: function (output) {
                    if (output.statusCode == 401 || output.status == 401) {
                        var response = $.parseJSON(output.responseText);

                        if (response.isRedirect) {
                            window.location.href = '../Login/Index';
                            return;
                        }
                    }
                    $("#ddDealerClass").html("");
                }
            });
        }

        function getDealersDD() {
            common.ajax_get("@Url.Action("GetAllActiveDealers", "Common")", null, "#filterBox", function (dealer) {
                if (dealer.MessageCode == MessageCodes.Acceptable.Found) {
                    $("#ddDealer").html('');
                    var list = '';
                    var options = [];
                    for (var i = 0; i < dealer.Data.length; i++) {
                        list += '<option value="' + dealer.Data[i].DealerId + '">' + dealer.Data[i].DealerName + '</option>';
                    }
                    $("#ddDealer").html(list);
                }
                else
                    common.notify(dealer.Message);
            }, function (output) {
                if (output.statusCode == 401 || output.status == 401) {
                    var response = $.parseJSON(output.responseText);

                    if (response.isRedirect) {
                        window.location.href = '../Login/Index';
                        return;
                    }
                }
                $("#ddDealer").html("");
            });
        }


        function getCompanyDD() {

            $.ajax({
                type: "GET",
                url: '@Url.Action("GetActiveBrands", "Common")',
                success: function (brand) {
                    $("#ddCompany").html(""); // clear before appending new list
                    //$("#ddCompany").append($('<option></option>').val(0).html("----All Companies------"));
                    $.each(brand.Data, function (i, branddet) {
                        $("#ddCompany").append($('<option></option>').val(branddet.BrandId).html(branddet.BrandName));
                    });
                    //$('#ddCompany > option').prop("selected", true);
                },
                error: function (output) {
                    if (output.statusCode == 401 || output.status == 401) {
                        var response = $.parseJSON(output.responseText);

                        if (response.isRedirect) {
                            window.location.href = '../Login/Index';
                            return;
                        }
                    }
                    $("#ddCompany").html("");
                }
            });
        }

        function getProSubCat() {
            debugger;
            ProdCat = $("#ddProdCat").val();
            if (ProdCat != null && ProdCat != '' && ProdCat != undefined) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetProductSubCategoryByCategoryId", "Common")',
                    data: { CategoryId: ProdCat },
                    success: function (subCategories) {

                        $("#ddProdSubCat").html(""); // clear before appending new list
                        //$("#ddProdSubCat").append($('<option></option>').val(0).html("----All Product Sub Categories------"));
                        $.each(subCategories, function (i, subCategory) {
                            $("#ddProdSubCat").append($('<option></option>').val(subCategory.ID).html(subCategory.SubCategoryName));
                        });
                        $('#ddProdSubCat').select2({ placeholder: "---All Product Sub Categories---" });
                        $("#ddProdSubCat").val(null).change();
                    },
                    error: function (output) {
                        if (output.statusCode == 401 || output.status == 401) {
                            var response = $.parseJSON(output.responseText);

                            if (response.isRedirect) {
                                window.location.href = '../Login/Index';
                                return;
                            }
                        }
                        $("#ddProdSubCat").html("");
                    }
                });
            }
        }

        function linkBranchWithDealerAndSFA()
        {
            $("#ddBranch").on('change', function (e, data) {
                if (!($(this).val() == null || $(this).val() == undefined || $(this).val() == '0' || $(this).val() == ''))
                {
                    common.ajax_post("@Url.Action("GetDealersByBranch", "Common")", { branchId: $(this).val() }, '#filterBox',
                    function (output) {
                        $('#ddDealer').html('');
                        $.each(output, function (i) {
                            $('#ddDealer').append($('<option>', { value: output[i].ID }).text(output[i].DealerName));
                        });
                        $('#ddDealer').val(null).change();
                    },
                function (output) {
                    if (output.statusCode == 401 || output.status == 401) {
                        var response = $.parseJSON(output.responseText);

                        if (response.isRedirect) {
                            window.location.href = '../Login/Index';
                            return;
                        }
                    }
                    $('#ddDealer').html('');
                    common.notify('error', 'No dealer found for selected branch.');
                });

                    common.ajax_post("@Url.Action("GetSFAByBranch", "Common")", { branchId: $(this).val() }, '#filterBox',
                    function (output) {
                        $('#ddSFA').html('');
                        $.each(output, function (i) {
                            $('#ddSFA').append($('<option>', { value: output[i].EmployeeId }).text(output[i].SFAFullName));
                        });
                        $('#ddSFA').val(null).change();
                    },
                function (output) {
                    if (output.statusCode == 401 || output.status == 401) {
                        var response = $.parseJSON(output.responseText);

                        if (response.isRedirect) {
                            window.location.href = '../Login/Index';
                            return;
                        }
                    }
                    $('#ddSFA').html('');
                    common.notify('error', 'No SFA found for selected branch.');
                });

                }

                else if ($(this).val() == '0' || $(this).val() == null) {
                    getDealersDD();
                }
            });
        }

        function init()
        {
            $('#ddBranch').select2({ placeholder: "---All Branches---" });
            $('#ddState').select2({ placeholder: "---All States---" });
            $('#ddSFA').select2({ placeholder: "---All SFA---" });
            $('#ddProdCat').select2({ placeholder: "---All Product Categories---" });
            $('#ddSFADivision').select2({ placeholder: "---All SFA Divisions---" });
            $('#ddDealer').select2({ placeholder: "Select Dealer Names" });
            $('#ddCompany').select2({ placeholder: "Select Company Names" });
            $('#ddSFAType').select2({ placeholder: "Select SFA Type" });
            $('#ddDealerClass').select2({ placeholder: "---All Dealer Classifications---" });

            $('#txtFromDate').prop('data-inputmask', "'alias': 'dd/mm/yyyy'");
            $('#txtFromDate').prop('data-mask', '');
            $('#txtFromDate').inputmask('dd/mm/yyyy', { 'placeholder': 'dd/mm/yyyy' })
            $('#txtToDate').prop('data-inputmask', "'alias': 'dd/mm/yyyy'");
            $('#txtToDate').prop('data-mask', '');
            $('#txtToDate').inputmask('dd/mm/yyyy', { 'placeholder': 'dd/mm/yyyy' })
            $('#txtFromDate').datepicker({
                autoclose: true,
                format: "dd/mm/yyyy",
            });
            $('#txtToDate').datepicker({
                autoclose: true,
                format: "dd/mm/yyyy"
            });
            $('body').on('click', '#collapseFilters', function (event) {
                event.preventDefault();
            });
        }

        function ValidateFilters()
        {
            var output = new Object();
            output.status = true;
            output.message = "";
            if($('#txtFromDate').val() == null || $('#txtFromDate').val() == undefined || $('#txtFromDate').val() == '')
            {
                output.status = false;
                output.message = "Please select From Date.";
                return output;
            }
            if ($('#txtToDate').val() == null || $('#txtToDate').val() == undefined || $('#txtToDate').val() == '') {
                output.status = false;
                output.message = "Please select To Date.";
                return output;
            }
            //if ($('#ddDealer').val() == null || $('#ddDealer').val() == undefined || $('#ddDealer').val() == '') {
            //    output.status = false;
            //    output.message = "Please select at least one dealer for generating report.";
            //    return output;
            //}
            //if ($('#ddCompany').val() == null || $('#ddCompany').val() == undefined || $('#ddCompany').val() == '') {
            //    output.status = false;
            //    output.message = "Please select at least one Company for generating report.";
            //    return output;
            //}
            if (!ValidateFromToDate())
            {
                output.status = false;
                output.message = "To Date Can't be less than From Date";
                return output;
            }

            if (!ValidateCurrentDate())
            {
                output.status = false;
                output.message = "From/To Date Can't be future Date  ";
                return output;
            }

            return output;
        }

        function Search() {
            debugger;

            var result = ValidateFilters();
            if (result.status) {
                $('#filterBoxHeader').trigger('click');
                $('#gridtable').removeClass('hidden');
                if ($.fn.dataTable.isDataTable('#dtDailySalesWithAttribute')) {
                    //$('#dtDailySalesWithAttribute').DataTable().destroy();
                    //$('#dtDailySalesWithAttribute tbody').empty();
                    dtDailySalesWithAttributeReport.destroy();
                }

                dtDailySalesWithAttributeReport = $('#dtDailySalesWithAttribute').DataTable({
                    serverSide: true,
                    processing: true,
                    searching: false,
                    scrollX: true,
                    ajax: {
                        url: "@Url.Action("DailySalesWithAttributeDisplayReport", "Reports")",
                        type: 'POST',
                        data: function (d) {
                            d.FromDate = $('#txtFromDate').val();
                            d.ToDate = $('#txtToDate').val();
                            d.BranchId = $('#ddBranch').val();
                            d.StateId = $('#ddState').val();
                            d.SFAId = $('#ddSFA').val();
                            d.SFAType = $('#ddSFAType').val();
                            d.ProductCategoryId = $('#ddProdCat').val();
                            d.ProSubCatId = $('#ddProdSubCat').val();
                            d.ClassificationId = $('#ddDealerClass').val();
                            d.DivisionId = $('#ddSFADivision').val();
                            d.DealerIds = $('#ddDealer').val();
                            d.CompanyIds = $('#ddCompany').val();
                        }
                    },
                    language: {
                        search: "",
                        searchPlaceholder: "Type here for search...",
                        processing: "Please wait while we fetch data..."
                    },
                    columns: [
                            { data: "Branch" },
                            { data: "Date" },
                            { data: "Month" },
                            { data: "DealerName" },
                            { data: "City" },
                            { data: "Location" },
                            { data: "PayerName"},
                            { data: "Channel" },
                            { data: "State" },
                            { data: "SAPCode" },
                            { data: "DealerCode" },
                            { data: "DealerClassification" },
                            { data: "SFACode" },
                            { data: "SFAName" },
                            { data: "SFALevel" },
                            { data: "IncentiveCate" },
                            { data: "CompanyName" },
                            { data: "ProCat" },
                           { data: "ProSubCat" },
                            { data: "ProSubCatDescription" },
                            { data: "SonyMaterial" },
                            { data: "Division" },
                            { data: "MOP" },
                            { data: "Quantity" },
                            { data: "TotalMOP" },
                            //{ data: "CoreCategory" },
                            { data: "SubCatGroup" },
                            { data: "Segment" },
                            { data: "Resolution" },
                            { data: "Internet" },
                            { data: "S3D" },
                            { data: "TVType" },
                             { data: "QSRStatus" },
                              { data: "QSRQuantity" },
                    ]
                });
            }
            else {
                common.notify('error', result.message);
            }
        }

        function ValidateDownloadFilter() {
            var result = ValidateFilters();
            if (!result.status) {
                common.notify('error', result.message);
                return false;
            }
        }

        $(document).ready(function () {
            getBranchDD();
            getStateDD();
            getProdCatDD();
            getDivisionsDD();
            getClassDD();
            getCompanyDD();
            getDealersDD();
            getSFATypeDD();
            linkBranchWithDealerAndSFA();
            init();

            if('@Session["DailySalesWithAttributeIndexNoData"].ToString()' == "1")
            {
                common.notify('error',"No data found");
                System.Web.HttpContext.Current.Session["DailySalesWithAttributeIndexNoData"] = "0";
            }

           @* $("#btnDownload").click(function () {
                var modeldata = new Object();
                modeldata.FromDate = $('#txtFromDate').val();
                modeldata.ToDate = $('#txtToDate').val();
                modeldata.BranchId = $('#ddBranch').val();
                modeldata.StateId = $('#ddState').val();
                modeldata.SFAId = $('#ddSFA').val();
                modeldata.ProductCategoryId = $('#ddProdCat').val();
                modeldata.ProSubCatId = $('#ddProdSubCat').val();
                modeldata.ClassificationId = $('#ddDealerClass').val();
                modeldata.DivisionId = $('#ddSFADivision').val();
                modeldata.DealerIds = $('#ddDealer').val();
                modeldata.CompanyIds = $('#ddCompany').val();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DailySalesAttributeExportExcel", "Reports")',
                    data: { objGridData: modeldata },

                    success: function (returnValue) {
                        if (returnValue) {
                            window.location.href = "@Url.RouteUrl(new { Controller = "Grid", Action = "Download"})/?file=" + returnValue.fileName;
                            common.notify('success', "File downloaded successfully");
                        }
                        else {
                            common.notify('error', "Empty file returned");
                        }
                    },
                    error: function (returnValue) {
                        common.notify('error', "Error while downloading file.")
                    }
                });

            });*@
        });

</script>
}

@section PageModals
{
}

<div class="row">
    <div class="col-lg-12">
        <div class="box box-primary box-solid" id="filterBox">
            <div class="box-header with-border text-center" id="filterBoxHeader" data-widget="collapse">
                <h3 class="box-title">Daily Sales With Attribute Report</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" id="collapseFilters">
                        <i class="fa fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
@using (Html.BeginForm("DailySalesWithAttributeExcel", "Reports", FormMethod.Post, new { id = "formDailySalesWithAttribute" }))
{
                <div class="row">
                    <div class="col-lg-3">
                        <div class="form-group">
                            <label>From Date:</label>
                            <input type="text" class="form-control input-sm" id="txtFromDate" autocomplete = "off" placeholder="Select From Date" name="FromDate"/>
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="form-group">
                            <label>To Date:</label>
                            <input type="text" class="form-control input-sm" id="txtToDate" autocomplete = "off" placeholder="Select To Date" name="ToDate"/>
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <label>Branch:</label>
                        @Html.DropDownListFor(m => m.BranchId, new SelectList(Enumerable.Empty<SelectListItem>()), new { @Id = "ddBranch", @Class = "form-control input-sm" })
                    </div>
                    <div class="col-lg-3">
                        <label>State:</label>
                        @Html.DropDownListFor(m => m.StateId, new SelectList(Enumerable.Empty<SelectListItem>()), new { @Id = "ddState", @Class = "form-control input-sm" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-2">
                        <label>SFA:</label>
                        @Html.DropDownListFor(m => m.SFAId, new SelectList(Enumerable.Empty<SelectListItem>()), new { @Id = "ddSFA", @Class = "form-control input-sm" })
                    </div>
                    <div class="col-lg-3">
                        <label>Product Category:</label>
                        @Html.DropDownListFor(m => m.ProductCategoryId, new SelectList(Enumerable.Empty<SelectListItem>()), new { @Id = "ddProdCat", @Class = "form-control input-sm",@onchange= "getProSubCat()" })
                    </div>
                    <div class="col-lg-3">
                        <label>Product Sub Category:</label>
                        @Html.DropDownListFor(m => m.ProSubCatId, new SelectList(Enumerable.Empty<SelectListItem>()), new { @Id = "ddProdSubCat", @Class = "form-control input-sm" })
                    </div>
                    <div class="col-lg-2">
                        <label>Classification:</label>
                        @Html.DropDownListFor(m => m.ClassificationId, new SelectList(Enumerable.Empty<SelectListItem>()), new { @Id = "ddDealerClass", @Class = "form-control input-sm" })
                    </div>
                    <div class="col-lg-2">
                        <label>Division:</label>
                        @Html.DropDownListFor(m => m.DivisionId, new SelectList(Enumerable.Empty<SelectListItem>()), new { @Id = "ddSFADivision", @Class = "form-control input-sm" })
                    </div>                    
                </div>
                <div class="row">
                    <div class="col-lg-2">
                        <label>SFA Type:</label>
                        @Html.DropDownListFor(m => m.SFAType, new SelectList(Enumerable.Empty<SelectListItem>()), new { @Id = "ddSFAType", @Class = "form-control input-sm" })
                    </div>  
                    <div class="col-lg-5">
                        @Html.AmboDropdownMultipleFor(Model => Model.DealerIds, "ddDealer", "Dealer Names:", "ddDealer")
                    </div>
                    <div class="col-lg-5">
                        @Html.AmboDropdownMultipleFor(Model => Model.CompanyIds, "ddCompany", "Company Names:", "ddCompany")
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6 col-lg-offset-4">
                        <button class="btn btn-flat btn-default" type="button" onclick="$(location).attr('href','@Url.Action("Index", "Dashboard")');"><i class="fa fa-mail-reply"></i> Exit</button>
                        <button class="btn btn-flat btn-primary" type="button" onclick="Search();"><i class="fa fa-search"></i> Search</button>
                        <button id="btnDownload" type="submit" class="btn btn-success btn-flat" onclick="return ValidateDownloadFilter();"><i class="fa fa-download"></i> Download to Excel</button>
                    </div>
                </div>
}
            </div>
        </div>
    </div>
</div>

<div class="row hidden" id="gridtable">
    <div class="col-lg-12">
        <div class="nav-tabs-custom">
            <ul class="nav nav-tabs">
                <li class="active"><a href="#tabData" data-toggle="tab"><i class="fa fa-location-arrow"></i> Daily Sales with Attributes</a></li>
                @*<li class="pull-right"><button id="btnDownload" style="margin-top:2px" type="button" class="btn btn-block btn-success btn-flat"><i class="fa fa-download"></i> Download to Excel</button></li>*@
            </ul>
            <div class="tab-content">
                <div class="tab-pane active" id="tabData">
                    <table id="dtDailySalesWithAttribute" class="table table-bordered table-striped nowrap reportstable table-hover datatable" >
                        <thead>
                            <tr>
                                <th>Branch</th>
                                <th>Date</th>
                                <th>Month</th>
                                <th>Dealer Name</th>
                                <th>City</th>
                                <th>Location</th>
                                <th>Payer Name</th>
                                <th>Channel</th>
                                <th>Dealer State</th>
                                <th>Master Code</th>
                                <th>Dealer Code</th>
                                <th>Classification</th>
                                <th>SFA Code</th>
                                <th>SFA Name</th>
                                <th>SFA Level</th>
                                <th>Incentive Category</th>
                                <th>Company Name</th>
                                <th>Product Category</th>
                                <th>Product Sub Category</th>
                                <th>Product Description</th>
                                <th>Material</th>
                                <th>Division</th>
                                <th>MOP</th>
                                <th>Quantity</th>
                                <th>Total MOP</th>
                                @*<th>Core Category</th>*@
                                <th>Attribute 1</th>
                                <th>Attribute 2</th>
                                <th>Attribute 3</th>
                                <th>Attribute 4</th>
                                <th>Attribute 5</th>
                                <th>Attribute 6</th>
                                <th>QSRStatus</th>
                                <th>QSRQuantity</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
                <!-- /.tab-pane -->
            </div>
            <!-- /.tab-content -->
        </div>
    </div>
</div>
