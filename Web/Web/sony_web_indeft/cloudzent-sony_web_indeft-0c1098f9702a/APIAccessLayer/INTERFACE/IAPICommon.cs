using System.Collections.Generic;
using AMBOModels.UserManagement;
using AMBOModels.Modules;
using AMBOModels.MasterMaintenance;
using AMBOModels.GlobalAccessible;
using APIAccessLayer.Helper;
using AMBOModels.Mappings;
using AMBOModels.Abstract;
using AMBOModels.IncentiveManagement;

namespace APIAccessLayer.INTERFACE
{
    public interface IAPICommon
    {
        List<RegionMaster> GetRegion();
        List<ChannelMaster> GetChannels();
        List<StateMaster> GetStates();
        List<CityData> GetAllCities();
        List<LocationData> GetAllLocations();
        List<StateMaster> GetStateByRegion(Common InputParam);
        List<CityMaster> GetCityByState(Common InputParam);
        List<ProductSubCategoryMaster> GetProductSubCategoryByCategoryId(Common InputParam);
        List<LocationMaster> GetLocationByCity(Common InputParam);
        List<DealerMaster> GetDealersByLocation(Common InputParam);
        List<DealerMaster> GetDealersByLocationNonSFA(Common InputParam);
        List<DealerMaster> GetDealersByBranch(Common InputParam);
        Envelope<List<SearchSFAOutput>> GetAllActiveSFA();
        Envelope<List<DealerList>> GetAllActiveDealers();
        Envelope<List<DealerList>> GetAllActiveDealersNonSFA();
        Envelope<List<BrandList>> GetActiveBrands();
        Envelope<List<FeedbackForm>> GetActiveFeedbackForms();
        List<DealerMasterCode> GetNonSFADealerMasterCodesByBranch(Common InputParam);
        List<NonSFADealer> GetNonSFADealersByMasterCodes(NonSFAMasterCodeList objInput);
        List<SFAFormData> GetSFAByDealer(Common InputParam);
        List<SFADropdown> GetSFADropdown();
        List<EmployeeFormData> GetAllActiveUsersByRole(Common InputParam);
        List<SalesPIC> GetSalesPICByBranch(Common InputParam);
        List<SFAFormData> GetAllActiveRDI();
        Envelope<List<SFALevelData>> GetActiveSFALevels();
        List<SFAFormData> GetSFAByBranch(Common InputParam);
        List<SearchSFAOutput> GetSFAFromDivisionAndBranch(SearchSFA InputParam);
        List<SearchSIDOutput> GetSIDFromBranchForBroadcast(SearchSID InputParam);
        List<SFAFormData> GetUnmappedSFAByBranch(Common InputParam);
        List<MasterMaintenance> GetBranch();
        List<ChannelMaster> GetChannel();
        List<DivisionMaster> GetDivisions();
        List<ProductCategoryMaster> GetProductCategories();
        List<ProductTargetCategoryMaster> GetProductTargetCategories();
        Envelope<List<ProductTargetCategoryData>> GetTargetCategoriesByProductCategories(ProductTargetCategorySearch objSearchData);
        List<TargetTypeMaster> GetTargetTypes();
        List<ProductCategoryMaster> GetUnmappedProdCatsForSFA(Common InputParam);
        List<RoleMaster> GetRoles();
        List<ClassificationTypeMaster> GetDealerClassificationTypes();
        List<AgencyMaster> GetAgency(AgencyDropdownInput InputData);
        List<SFASubLevelMaster> GetSFALevels();
        List<SFAType> GetSFAType();
        //List<SFAMasterforHR> GetSFAMasterforHR();
        CityTypeList GetCityType();
        List<DivisionMaster> GetDivisionForProductCategory();
        List<ProductCategoryMaster> GetProductCategoryByDivision(Common InputParam);
        List<Size> GetSize(AttributeGet InputParam);
        List<Segment> GetSegment(AttributeGet InputParam);
        List<Resolution> GetResolution(AttributeGet InputParam);
        List<Internet> GetInternet(AttributeGet InputParam);
        List<TVType> GetTVType(AttributeGet InputParam);
        List<D3> Get3D(AttributeGet InputParam);
        int ValidateMaterialCode(Common InputParam, out string result);
        List<Competitors> GetCompetitors();
        List<CompetitorProducts> GetCompetitorProducts(CompetitorProductsInput CompetitorId);
        List<Materials> GetMaterialDataforDD();
        List<Materials> GetMaterialDataforDDByProSub(MaterialDDInput Input);
        CompetitorData GetSonyProducts(CompetitorDataInput Id);
        Envelope<bool> ValidateSAPCode(Common InputParam);
        List<ProductCategoryGroupDD> GetProductCategoryForGroupMapping(Common InputParam);
        List<DisplayOrder> GetDisplayOrder();
        List<AssetAssignmentToRDIGet> GetReferenceId();
        List<string> GetMaterialMasterCodeList();
        List<string> GetDealerCodeList();
        List<LevelOfEducation> GetLevelOfEducation();
        List<Source> GetSource();
        List<Gender> GetGender();
        List<OutletType> GetOutletType();
        List<IncentiveCategoryMaster> GetAllIncentiveCategory();
        List<ModuleMaster> GetAllModules();
        List<SubModuleMaster> GetSubModulesByModuleId(SubModuleMasterGet InputParam);
        List<FestivalIncentiveScheme> GetAllFestivalScheme(FestivalIncentiveSchemeParam InputParam);
        List<AttendanceType> GetAllAttendanceType();
        List<DeviationReasons> GetAllDeviationReasons();
		List<ProductCategoryGroupMaster> GetProductCategoryGroupDropDown();
        GetBranch GetBranchByUserId(GetBranch InputParam);
        List<TrainingDropdown> GetTrainings(GetTrainingDropdown InputParam);
        List<SearchSFAOutput> GetSFAFromDivisionAndBranchAndRole(SearchSFA InputParam);
        List<SearchSIDOutput> GetSIDFromBranchAndRoleForBroadcast(SearchSID InputParam);
        List<SubCatgeory> GetSubCategoryforMultipleProducts(SubCatgeoryByProduct InputParam);
        void CreateErrorLogWeb(ErrorDetailsInput ErrorDetailsInput);
        Branchfohr GetBranchMappedForHR(GetBranch InputParam);
        List<ShiftTimingName> GetShiftTiming();
    }
}
